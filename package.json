{
    "name": "gepper",
    "displayName": "Gepper C++ helper",
    "description": "My cpp helper commands and snippets",
    "publisher": "guttih",
    "version": "0.2.0",
    "author": "Gudjon Holm Sigurdsson",
    "icon": "gepper.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/guttih/gepper"
    },
    "bugs": {
        "url": "https://github.com/guttih/gepper/issues",
        "email": "gudjonholm@gmail.com"
    },
    "license": "SEE LICENSE IN LICENSE",
    "engines": {
        "vscode": "^1.66.0"
    },
    "categories": [
        "Other",
        "Snippets"
    ],
    "keywords": [
        "c++",
        "CMake",
        "cpp",
        "guttih",
        "tern"
    ],
    "activationEvents": [
        "onCommand:gepper.createClass",
        "onCommand:gepper.createClassInFolder",
        "onLanguage:cpp"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "gepper.createClass",
                "title": "Create a new C++ Class"
            },
            {
                "command": "gepper.createClassInFolder",
                "title": "Create new C++ Class here"
            }
        ],
        "snippets": [
            {
                "language": "cpp",
                "path": "./snippets/cpp/class.json"
            },
            {
                "language": "cmake",
                "path": "./snippets/cmake/cmake.json"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "group": "navigation@-1",
                    "command": "gepper.createClass"
                },
                {
                    "command": "gepper.createClassInFolder",
                    "when": "explorerResourceIsFolder"
                }
            ]
        },
        "languages": [
            {
                "id": "cpp",
                "extensions": [
                    ".cpp",
                    ".hpp"
                ]
            }
        ],
        "configuration": [
            {
                "title": "Gepper C++ helper",
                "properties": {
                    "cpp.gepper.classPath": {
                        "type": "string",
                        "default": "",
                        "markdownDescription": "### Where the class will be created\nrelative to the project directory or absolute path.\n"
                    },
                    "cpp.gepper.classHeaderTemplate": {
                        "type": "string",
                        "editPresentation": "multilineText",
                        "default": "#ifndef {{__CLASS_NAME_UPPER__}}_H\n#define {{__CLASS_NAME_UPPER__}}_H\n\n\nclass {{__CLASS_NAME__}}\n{\npublic:\n    {{__CLASS_NAME__}}();\n    ~{{__CLASS_NAME__}}();\n\nprivate:\n\n};\n\n#endif",
                        "markdownDescription": "### Class Template for header file content (.h)\n*Available functional tokens are*\n\n| Functional token | Will be replaced with |\n| :----- | :----- |\n| `{{__CLASS_NAME__}}` | Entered class name |\n| `{{__CLASS_NAME_UPPER__}}` | Class name transformed to UPPERCASE |\n| `{{__CLASS_NAME_LOWER__}}` | Class name transformed to lowercase |\n| `{{__CLASS_NAME_LOWER_DASH__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"-\" |\n| `{{__CLASS_NAME_LOWER_UNDER__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"_\" |\n| `{{__CLASS_NAME_CAPITALIZE__}}` | First letter of entered class name is capitalized |\n| `{{__HEADER_FILE_NAME__}}` | default header file name as entered in the settings |\n| `{{__SOURCE_FILE_NAME__}}` | default source file name as entered in the settings |\n [Read more](https://github.com/guttih/gepper/blob/main/docs/settings.md#class-creation---functional-tokens)\n"
                    },
                    "cpp.gepper.classImplementationTemplate": {
                        "type": "string",
                        "editPresentation": "multilineText",
                        "default": "#include \"{{__HEADER_FILE_NAME__}}\"\n\n{{__CLASS_NAME__}}::{{__CLASS_NAME__}}()\n{\n\n}\n\n{{__CLASS_NAME__}}::~{{__CLASS_NAME__}}()\n{\n\n}",
                        "markdownDescription": "### Class Template for source file content (.cpp)\n*Available functional tokens are*\n\n| Functional token | Will be replaced with |\n| :----- | :----- |\n| `{{__CLASS_NAME__}}` | Entered class name |\n| `{{__CLASS_NAME_UPPER__}}` | Class name transformed to UPPERCASE |\n| `{{__CLASS_NAME_LOWER__}}` | Class name transformed to lowercase |\n| `{{__CLASS_NAME_LOWER_DASH__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"-\" |\n| `{{__CLASS_NAME_LOWER_UNDER__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"_\" |\n| `{{__CLASS_NAME_CAPITALIZE__}}` | First letter of entered class name is capitalized |\n| `{{__HEADER_FILE_NAME__}}` | default header file name as entered in the settings |\n| `{{__SOURCE_FILE_NAME__}}` | default source file name as entered in the settings |\n [Read more](https://github.com/guttih/gepper/blob/main/docs/settings.md#class-creation---functional-tokens)\n"
                    },
                    "cpp.gepper.classHeaderFileNameScheme": {
                        "type": "string",
                        "default": "{{__CLASS_NAME__}}.h",
                        "markdownDescription": "### Class header file naming schema (.h)\n*Available functional tokens are*\n\n| Functional token | Will be replaced with |\n| :----- | :----- |\n| `{{__CLASS_NAME__}}` | Entered class name |\n| `{{__CLASS_NAME_UPPER__}}` | Class name transformed to UPPERCASE |\n| `{{__CLASS_NAME_LOWER__}}` | Class name transformed to lowercase |\n| `{{__CLASS_NAME_LOWER_DASH__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"-\" |\n| `{{__CLASS_NAME_LOWER_UNDER__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"_\" |\n| `{{__CLASS_NAME_CAPITALIZE__}}` | First letter of entered class name is capitalized |\n [Read more](https://github.com/guttih/gepper/blob/main/docs/settings.md#class-creation---functional-tokens)\n"
                    },
                    "cpp.gepper.classImplementationFileNameScheme": {
                        "type": "string",
                        "default": "{{__CLASS_NAME__}}.cpp",
                        "markdownDescription": "### Class source file naming schema  (.cpp)\n*Available functional tokens are*\n\n| Functional token | Will be replaced with |\n| :----- | :----- |\n| `{{__CLASS_NAME__}}` | Entered class name |\n| `{{__CLASS_NAME_UPPER__}}` | Class name transformed to UPPERCASE |\n| `{{__CLASS_NAME_LOWER__}}` | Class name transformed to lowercase |\n| `{{__CLASS_NAME_LOWER_DASH__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"-\" |\n| `{{__CLASS_NAME_LOWER_UNDER__}}` | Class name transformed to lowerCase and every transformed uppercase character is prefixed with \"_\" |\n| `{{__CLASS_NAME_CAPITALIZE__}}` | First letter of entered class name is capitalized |\n [Read more](https://github.com/guttih/gepper/blob/main/docs/settings.md#class-creation---functional-tokens)\n"
                    },
                    "cpp.gepper.classCreated.ShowFile": {
                        "type": "string",
                        "enum": [
                            "Header file",
                            "Source file",
                            "none"
                        ],
                        "default": "Header file",
                        "markdownDescription": "### Open on class creation\n\nOpen a file in editor after the class has been created."
                    },
                    "cpp.gepper.shellExecute.OnSave.Command": {
                        "type": "string",
                        "default": "",
                        "markdownDescription": "### Shell command to execute on save\n*Available functional tokens are*\n\n| Functional token | Will be replaced with |\n| :----- | :----- |\n| `{{__FILE_PATH__}}` | Path (with no ending slash) to the file |\n| `{{__FILE_NAME__}}` | File name |\n [Read more](https://github.com/guttih/gepper/blob/main/docs/settings.md#on-save-command---functional-tokens)\n"
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js",
        "prepare": "node ./src/tools/preparePublish.js",
        "bump": "node ./src/tools/preparePublish.js -bump",
        "install": "./src/tools/packageTest.sh -install",
        "uninstall": "./src/tools/packageTest.sh -uninstall"
    },
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "^14.18.21",
        "@types/vscode": "^1.66.0",
        "@typescript-eslint/eslint-plugin": "^5.21.0",
        "@typescript-eslint/parser": "^5.21.0",
        "@vscode/test-electron": "^2.1.3",
        "eslint": "^8.14.0",
        "glob": "^8.0.1",
        "mocha": "^9.2.2",
        "ts-loader": "^9.2.8",
        "typescript": "^4.6.4",
        "webpack": "^5.70.0",
        "webpack-cli": "^4.9.2"
    },
    "__metadata": {
        "id": "72315b7a-3b59-465a-a062-78450c4cde9a",
        "publisherDisplayName": "guttih",
        "publisherId": "157e993a-fdc8-4148-a284-f5304fe179d8",
        "isPreReleaseVersion": false
    }
}